name: Build/release

on:
  push:
    tags:
      - 'v1.0.5'

jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [windows-2019, macos-10.15]
    steps:
      # step1: check out repository
      - name: Check out git repository
        uses: actions/checkout@v2

      # step2: install node env
      - name: Install Node.js
        uses: actions/setup-node@v2-beta

      # step3: npm install
      - name: npm install
        run: |
          npm install
          npm audit fix â€“force
          npm audit
      # step4: build app for mac/win
      - name: build windows app
        if: matrix.os == 'windows-2019'
        run: |
         npm electron:build --publish always
        env:
          GH_TOKEN: ${{ secrets.ACCESS_TOKEN }}

      - name: build mac app
        if: matrix.os == 'macos-10.15'
        run: |
        npm electron:build --publish always
       env:
          GH_TOKEN: ${{ secrets.ACCESS_TOKEN }}

      # step5: cleanup artifacts in build
      - name: cleanup artifacts for windows
        if: matrix.os == 'windows-2019'
        run: |
          npx  rimraf "build/win-unpacked"
          npx  rimraf "build/*.exe.blockmap"
          npx  rimraf "build/*.yaml"
      - name: cleanup artifacts for macosZ
        if: matrix.os == 'macos-10.15'
        run: |
          npx  rimraf "build/icons"
          npx  rimraf "build/mac"
          npx  rimraf "build/*.blockmap"
          npx  rimraf "build/*.yaml"
          npx  rimraf "build/*.json"
      # step6: upload artifacts
      - name: upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}
          path: build
      # step7: create release
      - name: release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: 'build/**'
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
